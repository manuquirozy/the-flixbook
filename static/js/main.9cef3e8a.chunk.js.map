{"version":3,"sources":["components/NavBar.js","components/VideoList.js","components/CastInfo.js","components/Reviews.js","components/RelatedMovies.js","components/MovieInfo.js","components/Favorites.js","components/MovieCard.js","components/MovieList.js","components/Search.js","components/Home.js","components/Genre.js","App/App.js","serviceWorker.js","index.js","components/logoTMDB.svg","components/logo.png"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","title","display","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","color","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","useState","value","setValue","classes","onEnter","setOnEnter","className","AppBar","Toolbar","variant","nowrap","to","src","require","alt","InputBase","onChange","event","console","log","target","onKeyPress","key","replace","placeholder","input","inputProps","renderRedirect","flexWrap","overflow","background","paper","gridList","transform","VideoList","props","GridList","cols","data","map","tile","GridListTile","id","url","primary","light","titleBar","CastInfo","name","profile_path","GridListTileBar","Reviews","state","reviews","this","process","undefined","axios","get","then","res","results","setState","error","length","review","author","content","React","Component","avatar","RelatedMovies","pathname","backdrop_path","actionIcon","Avatar","aria-label","vote_average","MovieInfo","movie","similar","componentWillReceiveProps","nextProps","location","window","reload","match","params","one","two","requestOne","requestTwo","all","spread","responseOne","responseTwo","video","poster_path","tagline","genres","genre","style","textDecoration","overview","credits","cast","videos","Favorites","maxWidth","media","paddingTop","expand","duration","shortest","expandOpen","MovieCard","expanded","Card","CardHeader","rating","subheader","release","CardMedia","image","Collapse","in","timeout","unmountOnExit","CardContent","MovieList","movies","dir","i","release_date","Search","Home","Genre","App","exact","path","component","logoTMDB","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.9cef3e8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.30),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.60),\r\n    },\r\n    marginLeft: 100,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  inputRoot: {\r\n    color: 'black',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const [value, setValue] = useState(0);\r\n  const classes = useStyles();\r\n  const [onEnter, setOnEnter] = useState(false);\r\n\r\n  function onChange(event) {\r\n    console.log(event.target.value)\r\n  }\r\n\r\n  function keyPressed(event) {\r\n    if (event.key === \"Enter\") {\r\n      let value = event.target.value.replace(/ /g,\"+\");\r\n      setValue(value);\r\n      setOnEnter(true);\r\n      console.log(value);\r\n    }\r\n  }\r\n\r\n  function renderRedirect (){\r\n    if (onEnter) {\r\n      return <Redirect to={'/search/'+value} />      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <div className={classes.title} variant=\"h6\" nowrap='true'>\r\n            <Link to=\"/the-flixbook\"><img src={require(\"./logo.png\")} alt=\"logo\" className=\"logo\" /></Link>\r\n          </div>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase onChange={onChange} onKeyPress={keyPressed}\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div>{renderRedirect()}</div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ReactPlayer from \"react-player\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    transform: 'translateZ(0)',\r\n  },\r\n}));\r\n\r\nexport default function VideoList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {props.data.map((tile) => (\r\n          <GridListTile key={tile.id}>\r\n            <ReactPlayer className=\"MovieVideos\"\r\n                url={\"https://www.youtube.com/watch?v=\"+tile.key}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\nexport default function CastInfo(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {props.data.map((tile) => (\r\n          <GridListTile key={tile.name}>\r\n            <img src={\"https://image.tmdb.org/t/p/w185\"+tile.profile_path} alt={tile.name} />\r\n            <GridListTileBar\r\n              title={tile.name}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nclass Reviews extends React.Component {\r\n    \r\n    state = {\r\n        reviews: {}\r\n      }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.data;\r\n        let url = `http://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\r\n        if (!(id === undefined || id === null)){\r\n            try {\r\n                axios.get(url)\r\n                .then(res => {\r\n                const reviews = res.data.results;\r\n                this.setState({ reviews});\r\n                console.log(\"REVIEWS \",this.state.reviews)\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"BigReview\">\r\n                {this.state.reviews.length > 0 && \r\n                <div className=\"ReviewsContainer\">\r\n                    {this.state.reviews.map(review =>\r\n                    <div>\r\n                        <h3 className=\"ReviewTitle\"> Written by {review.author} </h3> \r\n                        <p className=\"FullReview\"> {review.content} </p>\r\n                </div>)}\r\n                </div>}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Reviews","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'black',\r\n  },\r\n}));\r\n\r\n\r\nexport default function RelatedMovies(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        { props.data.length > 0 && props.data.map((tile) => (\r\n          <GridListTile key={tile.name}>\r\n                <Link to={{ pathname: \"/movieinfo/\" + tile.id, props: {id: tile.id}}} >\r\n                <img  src={\"https://image.tmdb.org/t/p/w300\"+tile.backdrop_path} alt={tile.name} /></Link>\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {tile.vote_average}\r\n              </Avatar>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport VideoList from '../components/VideoList'\r\nimport CastInfo from '../components/CastInfo'\r\nimport Reviews from '../components/Reviews'\r\nimport RelatedMovies from '../components/RelatedMovies'\r\n\r\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nclass MovieInfo extends React.Component {\r\n    state = {\r\n        movie: {},\r\n        results: [],\r\n        similar: [],\r\n        id: null\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps)=> {\r\n        if (nextProps.location.pathname !== this.props.location.pathname) {\r\n            window.location.reload();\r\n        }\r\n    };\r\n    \r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.setState((state) => { state.id = id; return state })\r\n        let one = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&append_to_response=videos,credits`\r\n        let two = `https://api.themoviedb.org/3/movie/${id}/similar?api_key=${API_KEY}&language=en-US&page=1`\r\n        const requestOne = axios.get(one);\r\n        const requestTwo = axios.get(two);\r\n        try {\r\n            await axios.all([requestOne, requestTwo])\r\n                .then(axios.spread((...responses) => {\r\n                    const responseOne = responses[0]\r\n                    const responseTwo = responses[1]\r\n                    console.log(\"response  \",responseTwo);\r\n                    const movie = responseOne.data;\r\n                    const similar = responseTwo.data.results;\r\n                    this.setState({ movie, results: movie.video.results, similar });\r\n                    console.log(\"similar \",this.state.similar);\r\n                }))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MovieInfoContainer\">\r\n                <div className=\"MainContainer\">\r\n                    <img className=\"Poster\" src={'http://image.tmdb.org/t/p/w342/' + this.state.movie.poster_path} alt=\"movie poster\" />\r\n                    <div className=\"MainInfo\">\r\n                        <div className=\"MovieHeader\">\r\n                            <h1 className=\"MovieTitle\">{this.state.movie.title}</h1>\r\n                        </div>\r\n                        <div className=\"CircleRating\"><div className=\"CircleText\">{this.state.movie.vote_average}</div></div> \r\n                        <span className=\"Tagline\">{this.state.movie.tagline}</span>\r\n                        <div className=\"Genres\"> <span className=\"Bolder\">Genres: </span>\r\n                        {this.state.movie.genres && (this.state.movie.genres.map((genre) => <span><Link to={\"/genre/\" + genre.id}\r\n                            style={{ textDecoration: 'none' }}> {genre.name}</Link></span>))}\r\n                        <h1>Overview</h1>\r\n                        <p className=\"Overview\">{this.state.movie.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h1>Cast</h1>\r\n                    <CastInfo data={this.state.movie.credits?.cast ? this.state.movie.credits.cast : []} />\r\n                </div>\r\n                <div>\r\n                    <h1>Reviews</h1>\r\n                    {this.state.id && <Reviews data={this.state.id} />}\r\n                </div>\r\n                <div>\r\n                    <h1>Related videos</h1>\r\n                    <VideoList data={this.state.movie.videos?.results ? this.state.movie.videos.results : []} />\r\n                </div>\r\n                <div>\r\n                    <h1>Related movies</h1>\r\n                    {this.state.similar  && <RelatedMovies data={this.state.similar} />}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MovieInfo\r\n\r\n","import React from 'react';\r\n\r\nclass Favorites extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>HOLA3</div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Favorites\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 200,\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '0%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'black',\r\n  },\r\n}));\r\n\r\nexport default function MovieCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const favoriteHandler = () =>{\r\n    console.log(props);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {props.rating}\r\n          </Avatar>\r\n        }\r\n        title={props.title}\r\n        subheader={\"In theaters \"+props.release}\r\n      />\r\n      <Link to={\"/movieinfo/\" + props.id}><CardMedia \r\n        className={classes.media}\r\n        image={'http://image.tmdb.org/t/p/w185/'+props.image}\r\n        title={props.title}\r\n      /></Link>\r\n      \r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            {props.overview}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard'\r\n\r\nclass MovieList extends React.Component {\r\n    state = {\r\n      movies: []\r\n    }\r\n  \r\n    async componentDidMount() {\r\n      try {\r\n        if(!(this.props.dir === undefined || this.props.dir === null)){\r\n          await axios.get(this.props.dir)\r\n          .then(res => {\r\n            const movies = res.data.results;\r\n            this.setState({ movies });\r\n            console.log(\"Results: \",res.data.results);\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  \r\n    render() {\r\n\r\n      return (        \r\n        <div className=\"MovieContainer\">\r\n          {this.state.movies.map((movie,i) => <MovieCard key={'movie_'+i} title={movie.title} \r\n          rating={movie.vote_average} overview={movie.overview} release={movie.release_date} \r\n          image={movie.poster_path} id={movie.id}/>)}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default MovieList;","import React from 'react';\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        id: null,\r\n        dir: null\r\n      }\r\n\r\n      componentWillReceiveProps = (nextProps)=> {\r\n        if (nextProps.location.pathname !== this.props.location.pathname) {\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.setState((state) => { state.id = id; return state })\r\n        const dir=\"https://api.themoviedb.org/3/search/movie?api_key=\"+API_KEY+\"&query=\"+id\r\n        this.setState({dir});\r\n        console.log(\"ID\" ,this.state.id)\r\n    }\r\n    render(){\r\n            return(\r\n                <div>\r\n                    {console.log(\"ID \",this.state.dir)};\r\n                    {this.state.dir && <MovieList dir={this.state.dir}/>}\r\n                </div>\r\n            );\r\n    };\r\n};\r\n\r\nexport default Search","import React from 'react';\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nexport default function Home(){\r\n    return(\r\n        <div>\r\n            <MovieList dir={\"https://api.themoviedb.org/3/movie/now_playing?api_key=\"+API_KEY}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\n\r\nexport default class Genre extends React.Component {\r\n    state = {\r\n        id: null,\r\n        dir: null\r\n      }\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const dir=\"https://api.themoviedb.org/3/discover/movie?api_key=\"+API_KEY+\"&with_genres=\"+id\r\n        this.setState({dir});\r\n    }\r\n        render(){\r\n            return(\r\n                <div>\r\n                    {console.log(\"ID \",this.state.dir)};\r\n                    {this.state.dir && <MovieList dir={this.state.dir}/>}\r\n                </div>\r\n            );\r\n        }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport NavBar from '../components/NavBar'\r\nimport MovieInfo from '../components/MovieInfo'\r\nimport Favorites from '../components/Favorites'\r\nimport Search from '../components/Search'\r\nimport Home from '../components/Home'\r\nimport Genre from '../components/Genre'\r\nimport logoTMDB from '../components/logoTMDB.svg'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <NavBar/>\r\n    </header>\r\n      <Switch>\r\n          <Route exact path=\"/the-flixbook\" component={Home}/>\r\n          <Route exact path=\"/favorites\" component={Favorites}/>\r\n          <Route exact path=\"/search/:id\" component={Search}/>\r\n          <Route exact path=\"/movieinfo/:id\" component={MovieInfo} />\r\n          <Route exact path=\"/genre/:id\" component={Genre}/>\r\n      </Switch>\r\n      <footer>\r\n        <div className=\"Footer\">\r\n          <span>Powered by </span>\r\n          <img src={logoTMDB} alt=\"logoTMDB\" className=\"logoTMDB\" />\r\n          <span> \"This product uses the TMDb API but is not endorsed or certified by TMDb.\"</span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logoTMDB.31d26327.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.4e897b05.png\";"],"sourceRoot":""}